{"version":3,"sources":["serviceWorkerRegistration.js","models/index.js","App.js","reportWebVitals.js","index.js"],"names":["Boolean","window","location","hostname","match","CowinApi","endpoint","Promise","resolve","reject","axios","get","then","response","data","catch","error","zip","date","Observable","subscriber","req","bind","watcher","setInterval","next","err","console","log","this","clearInterval","mobile","a","post","secret","otp","txnId","otpHasKey","CryptoJS","SHA256","toString","enc","Hex","body","JSON","stringify","headers","method","mode","credentials","res","token","getBenefeciaries","cowinApi","Search","Input","App","props","state","isWatchingAvailability","isAuthenticated","minAge","beneficiaries","vaccineCalendar","enableOtp","dates","ac","abort","AbortController","navigator","transport","signal","setState","theotp","Notification","requestPermission","status","notifSound","document","getElementById","play","opts","title","native","vibrate","result","serviceWorker","ready","registration","showNotification","Object","assign","localStorage","appData","unsubscribe","centers","map","c","sessions","s","parseInt","min_age_limit","available_capacity","name","pincode","address","message","self","init","moment","format","subscribe","handleNotification","setStorage","complete","trackAuth","clearWatch","style","marginTop","vc","noAvailability","ss","block_name","vaccine","slots","sl","session_id","center_id","e","target","value","verifyOtp","otpData","generateOtp","className","id","src","href","marginBottom","Group","onChange","setMinAge","disabled","gutter","xs","sm","md","lg","placeholder","allowClear","type","enterButton","size","onSearch","loading","txt","initWatch","icon","CloseCircleOutlined","danger","onClick","renderTable","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","unregister"],"mappings":"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","file":"static/js/main.cf82de2d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (\n        process.env.NODE_ENV === 'production' && \n        'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }else{\n        console.log('not prog');\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import axios from 'axios';\nimport { Observable } from 'rxjs';\nimport CryptoJS from 'crypto-js';\n\nconst url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin`\nconst secret = \"U2FsdGVkX19mD56KTNfQsZgXJMwOG7u/6tuj0Qvil1LEjx783oxHXGUTDWYm+XMYVGXPeu+a24sl5ndEKcLTUQ==\";\nexport default class CowinApi {\n    req(endpoint){\n        return new Promise((resolve, reject)=>{\n            axios.get(endpoint).then(function (response) {\n                // handle success\n                return resolve(response.data)\n              })\n              .catch(function (error) {\n                // handle error\n                return reject(error)\n              })\n        })\n    }\n    init(zip, date){\n        return new Observable(subscriber => {\n            let req = this.req.bind(this);\n            this.watcher = setInterval(()=>{\n                req(`${url}?pincode=${zip}&date=${date}`).then(data=>{\n                    subscriber.next(data);\n                }).catch(err=>{\n                    subscriber.error(err);\n                });\n            }, 500)\n          });\n    }\n    clearWatch(){\n        console.log(this);\n        clearInterval(this.watcher);\n    }\n    async generateOtp(mobile){\n        return await axios.post('https://cdn-api.co-vin.in/api/v2/auth/generateMobileOTP', {\n            mobile: mobile,\n            secret\n          })\n          .then(function (response) {\n            return response.data;\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n    async verifyOtp(otp, txnId){\n      let otpHasKey = CryptoJS.SHA256(otp).toString(CryptoJS.enc.Hex);\n        await axios\n          .post(\"https://cdn-api.co-vin.in/api/v2/auth/validateMobileOtp\", {\n            body: JSON.stringify({\n              otp: otpHasKey,\n              txnId: txnId,\n            }),\n            headers: {\n              \"content-type\": \"application/json\",\n            },\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: \"omit\",\n          })\n          .then((res) => {\n            return res.data;\n          })\n          .catch((error) => console.log(error));\n    }\n    async getBenefeciaries(token){\n      await axios.get('https://cdn-api.co-vin.in/api/v2/appointment/beneficiaries',{headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      }}).then(response=>{\n        return response.data\n      }).catch(err=>{\n        return err\n      })\n    }\n\n    trackAuth(token){\n      return new Observable(subscriber => {\n        let req = this.getBenefeciaries.bind(this);\n        this.watcher = setInterval(()=>{\n            req(token).then(data=>{\n                subscriber.next(data);\n            }).catch(err=>{\n                subscriber.error(err);\n            });\n        }, 3000 * 60)\n      });\n\n    }\n}\n","import \"./App.css\";\n// import { Notifications } from \"react-push-notification\";\nimport { Button, Col, Input, Row, Radio } from \"antd\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport CowinApi from \"./models\";\n\nimport moment from \"moment\";\n\nconsole.log('asdad');\nconst cowinApi = new CowinApi();\nconst { Search } = Input;\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    // if(localStorage.appData){\n    //   this.state = Object.assign({}, JSON.parse(localStorage.appData))\n    // }else{\n      this.state = {\n        isWatchingAvailability: false,\n        isAuthenticated: false,\n        minAge: 18,\n        beneficiaries: [],\n        vaccineCalendar: {},\n        zip: null,\n        enableOtp: false,\n        mobile: null,\n        dates: []\n      };\n    // }\n  }\n  async waitForOtp(){\n\n    console.log('waiting for otp');\n    if(this.ac){\n      this.ac.abort();\n    }\n    if ('OTPCredential' in window) {\n      \n      console.log('Waiting for SMS. Try sending yourself a following message:\\n\\n' +\n          'Your verification code is: 123ABC\\n\\n' +\n          '@whatwebcando.today #123ABC');\n\n          try {\n            this.ac = new AbortController();\n            const theotp = await navigator.credentials.get({\n              otp: { transport:['sms'] },\n              signal: this.ac.signal\n            }).then(otp => {\n              console.log('otp is ', otp);\n              console.log(`otp, ${otp}`);\n              this.setState({otp});\n            }).catch(err => {\n              console.log(`ssss ${err}`);\n            });  \n            console.log(theotp);\n          } catch (error) {\n            console.log(error);\n          }\n          \n    } else {\n      console.log('Web OTP API not supported');\n    }\n      \n  }\n  componentDidMount(){\n    // const self = this;    \n    Notification.requestPermission((status) => {\n      console.log(\"Notification permission status:\", status);\n    });\n\n    this.notifSound = document.getElementById(\"notif\");\n    this.notifSound.play();\n\n      let opts = {\n        title: \"Vaccine Notifications Enabled\",\n        body: `You now have notifications active for Covid vaccine availability`,\n        native: true,\n        vibrate: [300, 100, 400]\n      };\n      try {\n        Notification.requestPermission(function(result) {\n          if (result === 'granted') {\n            navigator.serviceWorker.ready.then(function(registration) {\n              registration.showNotification(opts.title, opts);\n            });\n          }\n        });\n        new Notification(opts.title, opts);  \n      } catch (error) {\n        console.log(error);\n      }\n  }\n  setStorage(){\n    let state = Object.assign({}, this.state)\n    delete state.vaccineCalendar;\n    delete state.isWatchingAvailability;\n    localStorage.appData = JSON.stringify(state);\n  }\n  componentWillUnmount() {\n    // unsubscribe to ensure no memory leaks\n    if(this.watcher) this.watcher.unsubscribe();\n  }\n  handleNotification(){\n    let centers = this.state.vaccineCalendar.centers;\n    centers.map(c=>{\n      c.sessions.map(s=>{\n        if (\n          parseInt(s.min_age_limit) == this.state.minAge &&\n          parseInt(s.available_capacity) > 0\n        ) {\n          this.setState({enableOtp: true})\n          this.notifSound.play();\n\n          let opts = {\n            title: c.name,\n            body: `${c.pincode} ${c.address} has ${s.available_capacity} on ${s.date}`,\n            vibrate: [300, 100, 400],\n            native: true\n          }\n          Notification.requestPermission(function(result) {\n            if (result === 'granted') {\n              navigator.serviceWorker.ready.then(function(registration) {\n                registration.showNotification(opts.message, opts);\n              });\n            }\n          });\n          new Notification(opts.title, opts);  \n          \n        }\n      })\n    })\n  }\n\n  initWatch(zip) {\n    const self = this;\n    console.log('zip', self.zip);\n    this.watcher = cowinApi\n      .init(this.state.zip, moment().format(\"DD-MM-YYYY\"))\n      .subscribe({\n        next(data) {\n          self.setState({vaccineCalendar: data},()=>{\n            self.handleNotification();\n            self.setStorage()\n          })\n        },\n        error(err) {\n          console.error(\"something wrong occurred: \" + err);\n        },\n        complete() {\n          console.log(\"done\");\n          this.setState({ isWatchingAvailability: false });\n        },\n      });\n  }\n  trackAuth() {\n    const self = this;\n    \n    this.watcher = cowinApi\n      .trackAuth(this.state.token)\n      .subscribe({\n        next(data) {\n          self.setState({beneficiaries: data})\n        },\n        error(err) {\n          console.error(\"something wrong occurred: \" + err);\n          this.setState({isAuthenticated: false})\n        },\n        complete() {\n          console.log(\"done\");\n          this.setState({ isWatchingAvailability: false });\n        },\n      });\n  }\n  clearWatch() {\n    cowinApi.clearWatch();\n    this.setState({ isWatchingAvailability: false });\n  }\n  renderTable(vaccineCalendar){\n    return <table style={{marginTop: 10}}>\n    {vaccineCalendar.centers.map((vc) => {\n      let noAvailability = true\n      vc.sessions.map(ss=>{\n        if(ss.available_capacity>0) noAvailability = false;\n      })\n      \n      return (\n        <tr key={vc.center_id}>\n          <td>\n            <h3>{vc.pincode} {vc.name}</h3>\n            {vc.block_name}\n            {vc.address}\n          </td>\n          \n            \n            {noAvailability ? <td>No Availability</td> : vc.sessions.map((s) => {\n              return (\n                <td key={s.session_id}>\n                  <h4>{s.date}</h4>\n                  <p>{s.vaccine}</p>\n                  <div>\n                    {parseInt(s.available_capacity) > 0\n                      ? `${s.available_capacity} shots available for ${s.min_age_limit}+`\n                      : \"No Availability\"}\n                  </div>\n                  {parseInt(s.available_capacity > 0) ? (\n                    <div>\n                      <b>Available Slots</b>\n                      {s.slots.map((sl) => {\n                        return <Row>{sl}</Row>;\n                      })}\n                    </div>\n                  ) : null}\n                </td>\n              );\n            })}\n          \n\n          {/* </th> */}\n        </tr>\n      );\n    })}\n  </table>\n  }\n  setMinAge(e){\n    this.setState({minAge: e.target.value});\n  }\n  generateOtp(){\n    this.setState({enableOtp: true});\n    return;\n    cowinApi.generateOtp(this.state.mobile).then(data=>{\n      console.log(data);\n      this.setState({otpData: data});\n      this.waitForOtp();\n      console.log(13);\n    }).catch(err=>{\n      console.log(err);\n    })\n  }\n  verifyOtp(){\n    this.setState({enableOtp: false});\n    cowinApi.verifyOtp(this.state.otp, this.state.otpData.txnId).then(data=>{\n      this.setState({token: data.token, isAuthenticated: true}, ()=>{\n        this.trackAuth();\n      })\n    }).catch(err=>{\n      console.log(err);\n      this.generateOtp();\n    })\n  }\n  render() {\n    const vaccineCalendar = this.state.vaccineCalendar;\n    return (\n      <div className=\"App\">\n        {/* <Notifications /> */}\n        <audio id=\"notif\">\n          <source src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\"></source>\n        </audio>\n        <header className=\"App-header\">\n          <h2>\n            Get notifications for Covid-19 vaccine availability in your area\n          </h2>\n        </header>\n        <a href=\"https://www.cowin.gov.in/home\" target=\"_blank\">\n          Visit Cowin to book a Vaccination Slot\n        </a>\n\n        <Col style={{ marginBottom: 10 }}>\n          {this.state.isWatchingAvailability ? null : (\n            <h3>Select age group for getting notifications</h3>\n          )}\n          <Radio.Group\n            onChange={this.setMinAge.bind(this)}\n            value={this.state.minAge}\n            disabled={this.state.isWatchingAvailability}\n          >\n            <Radio value={18}>18 to 45 Years</Radio>\n            <Radio value={45}>45+ Years</Radio>\n          </Radio.Group>\n        </Col>\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          {this.state.isAuthenticated ? null : (\n            <Col>\n              {this.state.enableOtp ? (\n                <Search\n                  placeholder=\"Enter OTP\"\n                  allowClear\n                  type=\"number\"\n                  // value={this.state.zip}\n                  enterButton={\"Submit\"}\n                  size=\"large\"\n                  onSearch={(e) => {\n                    console.log(e);\n                    this.setState({ otp: e },()=>{\n                      this.verifyOtp()\n                    });\n                  }}\n                />\n              ) : (\n                <Search\n                  placeholder=\"Mobile Number\"\n                  allowClear\n                  type=\"number\"\n                  value={this.state.mobile}\n                  enterButton={\"Generate OTP\"}\n                  size=\"large\"\n                  onSearch={(e) => {\n                    this.setState({ mobile: e, enableOtp: true });\n                  }}\n                />\n              )}\n\n              <Search\n                disabled={this.state.isWatchingAvailability}\n                placeholder={\n                  this.state.zip ? this.state.zip : \"Enter your area pincode\"\n                }\n                allowClear\n                type=\"number\"\n                // value={this.state.zip}\n                enterButton={\n                  this.state.isWatchingAvailability\n                    ? `Tracking`\n                    : `Track Availability`\n                }\n                size=\"large\"\n                loading={this.state.isWatchingAvailability}\n                onSearch={(txt) => {\n                  this.setState(\n                    { zip: txt, isWatchingAvailability: true },\n                    () => {\n                      this.initWatch();\n                    }\n                  );\n                }}\n              />\n            </Col>\n          )}\n\n          <Col>\n            {this.state.isWatchingAvailability ? (\n              <Button\n                type=\"primary\"\n                icon={<CloseCircleOutlined />}\n                size={\"large\"}\n                danger\n                onClick={this.clearWatch.bind(this)}\n              >\n                Stop\n              </Button>\n            ) : null}\n          </Col>\n        </Row>\n\n        {vaccineCalendar && vaccineCalendar.centers\n          ? this.renderTable(vaccineCalendar)\n          : null}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorkerRegistration.unregister();\nreportWebVitals();\n"],"sourceRoot":""}